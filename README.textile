
#Render code written in F#.
The point of this branch is to implement different optimization methods in order to reduce the time searching for intersections.

It can manage:
-Works with a Sphere type and meshes .obj type
-Multiple reflexions and transmissions included
-Fresnel reflexion term can be used
- Bounding Box implemented to reduce computing time
- Parallel implementation throught async F# on BBox and on pixel initialization. Up to now on the initialization only creates 4 procces and cannot be modified. Great Speed-up obtained.


Image obtained with Test_gourd.fsx:
!https://pbs.twimg.com/media/COC05VwWgAAc6Oi.png(Testlist)!
https://pbs.twimg.com/media/CN5hUM7WIAA2IVe.png (wrong image)


More samples images:
Before fresnel reflection was included: 
!https://pbs.twimg.com/media/CNgJTYeWcAAiLTK.png(Textist)!
Similar now:
!https://pbs.twimg.com/media/CN5hURNXAAA5F7u.png(Textlist)!
 

The local Paths of the .obj mesh files must be changed on the script and on the program.fs,I don't know (yet) how to specify the local  path.
